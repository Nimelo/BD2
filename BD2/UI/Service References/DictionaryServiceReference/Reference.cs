//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI.DictionaryServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Skill", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Skill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoftSkill", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SoftSkill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DictionaryServiceReference.IDictionaryService")]
    public interface IDictionaryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Ping", ReplyAction="http://tempuri.org/IBaseService/PingResponse")]
        void Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Ping", ReplyAction="http://tempuri.org/IBaseService/PingResponse")]
        System.Threading.Tasks.Task PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetAmountOfSkills", ReplyAction="http://tempuri.org/IDictionaryService/GetAmountOfSkillsResponse")]
        int GetAmountOfSkills();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetAmountOfSkills", ReplyAction="http://tempuri.org/IDictionaryService/GetAmountOfSkillsResponse")]
        System.Threading.Tasks.Task<int> GetAmountOfSkillsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetAmountOfSoftSkills", ReplyAction="http://tempuri.org/IDictionaryService/GetAmountOfSoftSkillsResponse")]
        int GetAmountOfSoftSkills();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetAmountOfSoftSkills", ReplyAction="http://tempuri.org/IDictionaryService/GetAmountOfSoftSkillsResponse")]
        System.Threading.Tasks.Task<int> GetAmountOfSoftSkillsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetSkillsByPage", ReplyAction="http://tempuri.org/IDictionaryService/GetSkillsByPageResponse")]
        System.Collections.Generic.List<UI.DictionaryServiceReference.Skill> GetSkillsByPage(int pageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetSkillsByPage", ReplyAction="http://tempuri.org/IDictionaryService/GetSkillsByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<UI.DictionaryServiceReference.Skill>> GetSkillsByPageAsync(int pageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetSoftSkillsByPage", ReplyAction="http://tempuri.org/IDictionaryService/GetSoftSkillsByPageResponse")]
        System.Collections.Generic.List<UI.DictionaryServiceReference.SoftSkill> GetSoftSkillsByPage(int pageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetSoftSkillsByPage", ReplyAction="http://tempuri.org/IDictionaryService/GetSoftSkillsByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<UI.DictionaryServiceReference.SoftSkill>> GetSoftSkillsByPageAsync(int pageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetSkillById", ReplyAction="http://tempuri.org/IDictionaryService/GetSkillByIdResponse")]
        UI.DictionaryServiceReference.Skill GetSkillById(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetSkillById", ReplyAction="http://tempuri.org/IDictionaryService/GetSkillByIdResponse")]
        System.Threading.Tasks.Task<UI.DictionaryServiceReference.Skill> GetSkillByIdAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetSoftSkillById", ReplyAction="http://tempuri.org/IDictionaryService/GetSoftSkillByIdResponse")]
        UI.DictionaryServiceReference.SoftSkill GetSoftSkillById(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/GetSoftSkillById", ReplyAction="http://tempuri.org/IDictionaryService/GetSoftSkillByIdResponse")]
        System.Threading.Tasks.Task<UI.DictionaryServiceReference.SoftSkill> GetSoftSkillByIdAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/SaveSkill", ReplyAction="http://tempuri.org/IDictionaryService/SaveSkillResponse")]
        int SaveSkill(UI.DictionaryServiceReference.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/SaveSkill", ReplyAction="http://tempuri.org/IDictionaryService/SaveSkillResponse")]
        System.Threading.Tasks.Task<int> SaveSkillAsync(UI.DictionaryServiceReference.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/SaveSoftSkill", ReplyAction="http://tempuri.org/IDictionaryService/SaveSoftSkillResponse")]
        int SaveSoftSkill(UI.DictionaryServiceReference.SoftSkill softSkill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/SaveSoftSkill", ReplyAction="http://tempuri.org/IDictionaryService/SaveSoftSkillResponse")]
        System.Threading.Tasks.Task<int> SaveSoftSkillAsync(UI.DictionaryServiceReference.SoftSkill softSkill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/DeleteSkill", ReplyAction="http://tempuri.org/IDictionaryService/DeleteSkillResponse")]
        void DeleteSkill(UI.DictionaryServiceReference.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/DeleteSkill", ReplyAction="http://tempuri.org/IDictionaryService/DeleteSkillResponse")]
        System.Threading.Tasks.Task DeleteSkillAsync(UI.DictionaryServiceReference.Skill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/DeleteSoftSkill", ReplyAction="http://tempuri.org/IDictionaryService/DeleteSoftSkillResponse")]
        void DeleteSoftSkill(UI.DictionaryServiceReference.SoftSkill skill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionaryService/DeleteSoftSkill", ReplyAction="http://tempuri.org/IDictionaryService/DeleteSoftSkillResponse")]
        System.Threading.Tasks.Task DeleteSoftSkillAsync(UI.DictionaryServiceReference.SoftSkill skill);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDictionaryServiceChannel : UI.DictionaryServiceReference.IDictionaryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DictionaryServiceClient : System.ServiceModel.ClientBase<UI.DictionaryServiceReference.IDictionaryService>, UI.DictionaryServiceReference.IDictionaryService {
        
        public DictionaryServiceClient() {
        }
        
        public DictionaryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DictionaryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionaryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionaryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Ping() {
            base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public int GetAmountOfSkills() {
            return base.Channel.GetAmountOfSkills();
        }
        
        public System.Threading.Tasks.Task<int> GetAmountOfSkillsAsync() {
            return base.Channel.GetAmountOfSkillsAsync();
        }
        
        public int GetAmountOfSoftSkills() {
            return base.Channel.GetAmountOfSoftSkills();
        }
        
        public System.Threading.Tasks.Task<int> GetAmountOfSoftSkillsAsync() {
            return base.Channel.GetAmountOfSoftSkillsAsync();
        }
        
        public System.Collections.Generic.List<UI.DictionaryServiceReference.Skill> GetSkillsByPage(int pageNumber) {
            return base.Channel.GetSkillsByPage(pageNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<UI.DictionaryServiceReference.Skill>> GetSkillsByPageAsync(int pageNumber) {
            return base.Channel.GetSkillsByPageAsync(pageNumber);
        }
        
        public System.Collections.Generic.List<UI.DictionaryServiceReference.SoftSkill> GetSoftSkillsByPage(int pageNumber) {
            return base.Channel.GetSoftSkillsByPage(pageNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<UI.DictionaryServiceReference.SoftSkill>> GetSoftSkillsByPageAsync(int pageNumber) {
            return base.Channel.GetSoftSkillsByPageAsync(pageNumber);
        }
        
        public UI.DictionaryServiceReference.Skill GetSkillById(long id) {
            return base.Channel.GetSkillById(id);
        }
        
        public System.Threading.Tasks.Task<UI.DictionaryServiceReference.Skill> GetSkillByIdAsync(long id) {
            return base.Channel.GetSkillByIdAsync(id);
        }
        
        public UI.DictionaryServiceReference.SoftSkill GetSoftSkillById(long id) {
            return base.Channel.GetSoftSkillById(id);
        }
        
        public System.Threading.Tasks.Task<UI.DictionaryServiceReference.SoftSkill> GetSoftSkillByIdAsync(long id) {
            return base.Channel.GetSoftSkillByIdAsync(id);
        }
        
        public int SaveSkill(UI.DictionaryServiceReference.Skill skill) {
            return base.Channel.SaveSkill(skill);
        }
        
        public System.Threading.Tasks.Task<int> SaveSkillAsync(UI.DictionaryServiceReference.Skill skill) {
            return base.Channel.SaveSkillAsync(skill);
        }
        
        public int SaveSoftSkill(UI.DictionaryServiceReference.SoftSkill softSkill) {
            return base.Channel.SaveSoftSkill(softSkill);
        }
        
        public System.Threading.Tasks.Task<int> SaveSoftSkillAsync(UI.DictionaryServiceReference.SoftSkill softSkill) {
            return base.Channel.SaveSoftSkillAsync(softSkill);
        }
        
        public void DeleteSkill(UI.DictionaryServiceReference.Skill skill) {
            base.Channel.DeleteSkill(skill);
        }
        
        public System.Threading.Tasks.Task DeleteSkillAsync(UI.DictionaryServiceReference.Skill skill) {
            return base.Channel.DeleteSkillAsync(skill);
        }
        
        public void DeleteSoftSkill(UI.DictionaryServiceReference.SoftSkill skill) {
            base.Channel.DeleteSoftSkill(skill);
        }
        
        public System.Threading.Tasks.Task DeleteSoftSkillAsync(UI.DictionaryServiceReference.SoftSkill skill) {
            return base.Channel.DeleteSoftSkillAsync(skill);
        }
    }
}

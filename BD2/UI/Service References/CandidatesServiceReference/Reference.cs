//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI.CandidatesServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Candidate", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Candidate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<UI.CandidatesServiceReference.Decision> DecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<UI.CandidatesServiceReference.Document> DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Evaluation EvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<UI.CandidatesServiceReference.RecruitmentStage> RecruitmentStageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<UI.CandidatesServiceReference.Decision> Decision {
            get {
                return this.DecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.DecisionField, value) != true)) {
                    this.DecisionField = value;
                    this.RaisePropertyChanged("Decision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<UI.CandidatesServiceReference.Document> Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Evaluation Evaluation {
            get {
                return this.EvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.EvaluationField, value) != true)) {
                    this.EvaluationField = value;
                    this.RaisePropertyChanged("Evaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<UI.CandidatesServiceReference.RecruitmentStage> RecruitmentStage {
            get {
                return this.RecruitmentStageField;
            }
            set {
                if ((object.ReferenceEquals(this.RecruitmentStageField, value) != true)) {
                    this.RecruitmentStageField = value;
                    this.RaisePropertyChanged("RecruitmentStage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Evaluation", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Evaluation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Candidate CandidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEvaluatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<UI.CandidatesServiceReference.SkillsEvaluation> SkillsEvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<UI.CandidatesServiceReference.SoftSkillsEvaluation> SoftSkillsEvaluationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Candidate Candidate {
            get {
                return this.CandidateField;
            }
            set {
                if ((object.ReferenceEquals(this.CandidateField, value) != true)) {
                    this.CandidateField = value;
                    this.RaisePropertyChanged("Candidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEvaluated {
            get {
                return this.IsEvaluatedField;
            }
            set {
                if ((this.IsEvaluatedField.Equals(value) != true)) {
                    this.IsEvaluatedField = value;
                    this.RaisePropertyChanged("IsEvaluated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<UI.CandidatesServiceReference.SkillsEvaluation> SkillsEvaluation {
            get {
                return this.SkillsEvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillsEvaluationField, value) != true)) {
                    this.SkillsEvaluationField = value;
                    this.RaisePropertyChanged("SkillsEvaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<UI.CandidatesServiceReference.SoftSkillsEvaluation> SoftSkillsEvaluation {
            get {
                return this.SoftSkillsEvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.SoftSkillsEvaluationField, value) != true)) {
                    this.SoftSkillsEvaluationField = value;
                    this.RaisePropertyChanged("SoftSkillsEvaluation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Candidate CandidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeselField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Candidate Candidate {
            get {
                return this.CandidateField;
            }
            set {
                if ((object.ReferenceEquals(this.CandidateField, value) != true)) {
                    this.CandidateField = value;
                    this.RaisePropertyChanged("Candidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pesel {
            get {
                return this.PeselField;
            }
            set {
                if ((object.ReferenceEquals(this.PeselField, value) != true)) {
                    this.PeselField = value;
                    this.RaisePropertyChanged("Pesel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SurName {
            get {
                return this.SurNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurNameField, value) != true)) {
                    this.SurNameField = value;
                    this.RaisePropertyChanged("SurName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Decision", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Decision : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Candidate CandidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CandidateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Candidate Candidate {
            get {
                return this.CandidateField;
            }
            set {
                if ((object.ReferenceEquals(this.CandidateField, value) != true)) {
                    this.CandidateField = value;
                    this.RaisePropertyChanged("Candidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CandidateId {
            get {
                return this.CandidateIdField;
            }
            set {
                if ((this.CandidateIdField.Equals(value) != true)) {
                    this.CandidateIdField = value;
                    this.RaisePropertyChanged("CandidateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Candidate CandidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CandidateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Candidate Candidate {
            get {
                return this.CandidateField;
            }
            set {
                if ((object.ReferenceEquals(this.CandidateField, value) != true)) {
                    this.CandidateField = value;
                    this.RaisePropertyChanged("Candidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CandidateId {
            get {
                return this.CandidateIdField;
            }
            set {
                if ((this.CandidateIdField.Equals(value) != true)) {
                    this.CandidateIdField = value;
                    this.RaisePropertyChanged("CandidateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecruitmentStage", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class RecruitmentStage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Candidate CandidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CandidateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Candidate Candidate {
            get {
                return this.CandidateField;
            }
            set {
                if ((object.ReferenceEquals(this.CandidateField, value) != true)) {
                    this.CandidateField = value;
                    this.RaisePropertyChanged("Candidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CandidateId {
            get {
                return this.CandidateIdField;
            }
            set {
                if ((this.CandidateIdField.Equals(value) != true)) {
                    this.CandidateIdField = value;
                    this.RaisePropertyChanged("CandidateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCurrent {
            get {
                return this.IsCurrentField;
            }
            set {
                if ((this.IsCurrentField.Equals(value) != true)) {
                    this.IsCurrentField = value;
                    this.RaisePropertyChanged("IsCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Mark {
            get {
                return this.MarkField;
            }
            set {
                if ((this.MarkField.Equals(value) != true)) {
                    this.MarkField = value;
                    this.RaisePropertyChanged("Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Stage {
            get {
                return this.StageField;
            }
            set {
                if ((this.StageField.Equals(value) != true)) {
                    this.StageField = value;
                    this.RaisePropertyChanged("Stage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkillsEvaluation", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SkillsEvaluation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Evaluation EvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EvaluationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Skill SkillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkillIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Evaluation Evaluation {
            get {
                return this.EvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.EvaluationField, value) != true)) {
                    this.EvaluationField = value;
                    this.RaisePropertyChanged("Evaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EvaluationId {
            get {
                return this.EvaluationIdField;
            }
            set {
                if ((this.EvaluationIdField.Equals(value) != true)) {
                    this.EvaluationIdField = value;
                    this.RaisePropertyChanged("EvaluationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Mark {
            get {
                return this.MarkField;
            }
            set {
                if ((this.MarkField.Equals(value) != true)) {
                    this.MarkField = value;
                    this.RaisePropertyChanged("Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Skill Skill {
            get {
                return this.SkillField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillField, value) != true)) {
                    this.SkillField = value;
                    this.RaisePropertyChanged("Skill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkillId {
            get {
                return this.SkillIdField;
            }
            set {
                if ((this.SkillIdField.Equals(value) != true)) {
                    this.SkillIdField = value;
                    this.RaisePropertyChanged("SkillId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoftSkillsEvaluation", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SoftSkillsEvaluation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Evaluation EvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EvaluationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.SoftSkill SoftSkillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoftSkillIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Evaluation Evaluation {
            get {
                return this.EvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.EvaluationField, value) != true)) {
                    this.EvaluationField = value;
                    this.RaisePropertyChanged("Evaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EvaluationId {
            get {
                return this.EvaluationIdField;
            }
            set {
                if ((this.EvaluationIdField.Equals(value) != true)) {
                    this.EvaluationIdField = value;
                    this.RaisePropertyChanged("EvaluationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Mark {
            get {
                return this.MarkField;
            }
            set {
                if ((this.MarkField.Equals(value) != true)) {
                    this.MarkField = value;
                    this.RaisePropertyChanged("Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.SoftSkill SoftSkill {
            get {
                return this.SoftSkillField;
            }
            set {
                if ((object.ReferenceEquals(this.SoftSkillField, value) != true)) {
                    this.SoftSkillField = value;
                    this.RaisePropertyChanged("SoftSkill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoftSkillId {
            get {
                return this.SoftSkillIdField;
            }
            set {
                if ((this.SoftSkillIdField.Equals(value) != true)) {
                    this.SoftSkillIdField = value;
                    this.RaisePropertyChanged("SoftSkillId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Skill", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Skill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoftSkill", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SoftSkill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Database", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.CandidatesServiceReference.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.CandidatesServiceReference.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CandidatesServiceReference.ICandidatesService")]
    public interface ICandidatesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Ping", ReplyAction="http://tempuri.org/IBaseService/PingResponse")]
        void Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Ping", ReplyAction="http://tempuri.org/IBaseService/PingResponse")]
        System.Threading.Tasks.Task PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetAmountOfRecords", ReplyAction="http://tempuri.org/ICandidatesService/GetAmountOfRecordsResponse")]
        int GetAmountOfRecords(Common.Enums.CandidatesStagesEnum stage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetAmountOfRecords", ReplyAction="http://tempuri.org/ICandidatesService/GetAmountOfRecordsResponse")]
        System.Threading.Tasks.Task<int> GetAmountOfRecordsAsync(Common.Enums.CandidatesStagesEnum stage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetCandidateById", ReplyAction="http://tempuri.org/ICandidatesService/GetCandidateByIdResponse")]
        UI.CandidatesServiceReference.Candidate GetCandidateById(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetCandidateById", ReplyAction="http://tempuri.org/ICandidatesService/GetCandidateByIdResponse")]
        System.Threading.Tasks.Task<UI.CandidatesServiceReference.Candidate> GetCandidateByIdAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetCandidatesByPage", ReplyAction="http://tempuri.org/ICandidatesService/GetCandidatesByPageResponse")]
        System.Collections.Generic.List<UI.CandidatesServiceReference.Candidate> GetCandidatesByPage(int pageNumber, Common.Enums.CandidatesStagesEnum stage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetCandidatesByPage", ReplyAction="http://tempuri.org/ICandidatesService/GetCandidatesByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<UI.CandidatesServiceReference.Candidate>> GetCandidatesByPageAsync(int pageNumber, Common.Enums.CandidatesStagesEnum stage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/Save", ReplyAction="http://tempuri.org/ICandidatesService/SaveResponse")]
        void Save(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/Save", ReplyAction="http://tempuri.org/ICandidatesService/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/Delete", ReplyAction="http://tempuri.org/ICandidatesService/DeleteResponse")]
        void Delete(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/Delete", ReplyAction="http://tempuri.org/ICandidatesService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/Modify", ReplyAction="http://tempuri.org/ICandidatesService/ModifyResponse")]
        void Modify(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/Modify", ReplyAction="http://tempuri.org/ICandidatesService/ModifyResponse")]
        System.Threading.Tasks.Task ModifyAsync(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/Add", ReplyAction="http://tempuri.org/ICandidatesService/AddResponse")]
        int Add(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/Add", ReplyAction="http://tempuri.org/ICandidatesService/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetNotUsedSkillsNames", ReplyAction="http://tempuri.org/ICandidatesService/GetNotUsedSkillsNamesResponse")]
        System.Collections.Generic.List<string> GetNotUsedSkillsNames(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetNotUsedSkillsNames", ReplyAction="http://tempuri.org/ICandidatesService/GetNotUsedSkillsNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetNotUsedSkillsNamesAsync(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetNotUsedSoftSkillsNames", ReplyAction="http://tempuri.org/ICandidatesService/GetNotUsedSoftSkillsNamesResponse")]
        System.Collections.Generic.List<string> GetNotUsedSoftSkillsNames(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetNotUsedSoftSkillsNames", ReplyAction="http://tempuri.org/ICandidatesService/GetNotUsedSoftSkillsNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetNotUsedSoftSkillsNamesAsync(UI.CandidatesServiceReference.Candidate candidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/SaveSkill", ReplyAction="http://tempuri.org/ICandidatesService/SaveSkillResponse")]
        void SaveSkill(UI.CandidatesServiceReference.SkillsEvaluation skillEvaluation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/SaveSkill", ReplyAction="http://tempuri.org/ICandidatesService/SaveSkillResponse")]
        System.Threading.Tasks.Task SaveSkillAsync(UI.CandidatesServiceReference.SkillsEvaluation skillEvaluation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/AddSkill", ReplyAction="http://tempuri.org/ICandidatesService/AddSkillResponse")]
        long AddSkill(UI.CandidatesServiceReference.Candidate candidate, UI.CandidatesServiceReference.SkillsEvaluation skillEvaluation, string skillName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/AddSkill", ReplyAction="http://tempuri.org/ICandidatesService/AddSkillResponse")]
        System.Threading.Tasks.Task<long> AddSkillAsync(UI.CandidatesServiceReference.Candidate candidate, UI.CandidatesServiceReference.SkillsEvaluation skillEvaluation, string skillName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetCandidateBySkillEvaluationId", ReplyAction="http://tempuri.org/ICandidatesService/GetCandidateBySkillEvaluationIdResponse")]
        UI.CandidatesServiceReference.Candidate GetCandidateBySkillEvaluationId(long skillEvaluationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetCandidateBySkillEvaluationId", ReplyAction="http://tempuri.org/ICandidatesService/GetCandidateBySkillEvaluationIdResponse")]
        System.Threading.Tasks.Task<UI.CandidatesServiceReference.Candidate> GetCandidateBySkillEvaluationIdAsync(long skillEvaluationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/SaveSoftSkill", ReplyAction="http://tempuri.org/ICandidatesService/SaveSoftSkillResponse")]
        void SaveSoftSkill(UI.CandidatesServiceReference.SoftSkillsEvaluation skillEvaluation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/SaveSoftSkill", ReplyAction="http://tempuri.org/ICandidatesService/SaveSoftSkillResponse")]
        System.Threading.Tasks.Task SaveSoftSkillAsync(UI.CandidatesServiceReference.SoftSkillsEvaluation skillEvaluation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/AddSoftSkill", ReplyAction="http://tempuri.org/ICandidatesService/AddSoftSkillResponse")]
        long AddSoftSkill(UI.CandidatesServiceReference.Candidate candidate, UI.CandidatesServiceReference.SoftSkillsEvaluation skillEvaluation, string skillName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/AddSoftSkill", ReplyAction="http://tempuri.org/ICandidatesService/AddSoftSkillResponse")]
        System.Threading.Tasks.Task<long> AddSoftSkillAsync(UI.CandidatesServiceReference.Candidate candidate, UI.CandidatesServiceReference.SoftSkillsEvaluation skillEvaluation, string skillName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetCandidateBySoftSkillEvaluationId", ReplyAction="http://tempuri.org/ICandidatesService/GetCandidateBySoftSkillEvaluationIdResponse" +
            "")]
        UI.CandidatesServiceReference.Candidate GetCandidateBySoftSkillEvaluationId(long softSkillEvaluationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICandidatesService/GetCandidateBySoftSkillEvaluationId", ReplyAction="http://tempuri.org/ICandidatesService/GetCandidateBySoftSkillEvaluationIdResponse" +
            "")]
        System.Threading.Tasks.Task<UI.CandidatesServiceReference.Candidate> GetCandidateBySoftSkillEvaluationIdAsync(long softSkillEvaluationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICandidatesServiceChannel : UI.CandidatesServiceReference.ICandidatesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CandidatesServiceClient : System.ServiceModel.ClientBase<UI.CandidatesServiceReference.ICandidatesService>, UI.CandidatesServiceReference.ICandidatesService {
        
        public CandidatesServiceClient() {
        }
        
        public CandidatesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CandidatesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CandidatesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CandidatesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Ping() {
            base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public int GetAmountOfRecords(Common.Enums.CandidatesStagesEnum stage) {
            return base.Channel.GetAmountOfRecords(stage);
        }
        
        public System.Threading.Tasks.Task<int> GetAmountOfRecordsAsync(Common.Enums.CandidatesStagesEnum stage) {
            return base.Channel.GetAmountOfRecordsAsync(stage);
        }
        
        public UI.CandidatesServiceReference.Candidate GetCandidateById(long id) {
            return base.Channel.GetCandidateById(id);
        }
        
        public System.Threading.Tasks.Task<UI.CandidatesServiceReference.Candidate> GetCandidateByIdAsync(long id) {
            return base.Channel.GetCandidateByIdAsync(id);
        }
        
        public System.Collections.Generic.List<UI.CandidatesServiceReference.Candidate> GetCandidatesByPage(int pageNumber, Common.Enums.CandidatesStagesEnum stage) {
            return base.Channel.GetCandidatesByPage(pageNumber, stage);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<UI.CandidatesServiceReference.Candidate>> GetCandidatesByPageAsync(int pageNumber, Common.Enums.CandidatesStagesEnum stage) {
            return base.Channel.GetCandidatesByPageAsync(pageNumber, stage);
        }
        
        public void Save(UI.CandidatesServiceReference.Candidate candidate) {
            base.Channel.Save(candidate);
        }
        
        public System.Threading.Tasks.Task SaveAsync(UI.CandidatesServiceReference.Candidate candidate) {
            return base.Channel.SaveAsync(candidate);
        }
        
        public void Delete(UI.CandidatesServiceReference.Candidate candidate) {
            base.Channel.Delete(candidate);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(UI.CandidatesServiceReference.Candidate candidate) {
            return base.Channel.DeleteAsync(candidate);
        }
        
        public void Modify(UI.CandidatesServiceReference.Candidate candidate) {
            base.Channel.Modify(candidate);
        }
        
        public System.Threading.Tasks.Task ModifyAsync(UI.CandidatesServiceReference.Candidate candidate) {
            return base.Channel.ModifyAsync(candidate);
        }
        
        public int Add(UI.CandidatesServiceReference.Candidate candidate) {
            return base.Channel.Add(candidate);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(UI.CandidatesServiceReference.Candidate candidate) {
            return base.Channel.AddAsync(candidate);
        }
        
        public System.Collections.Generic.List<string> GetNotUsedSkillsNames(UI.CandidatesServiceReference.Candidate candidate) {
            return base.Channel.GetNotUsedSkillsNames(candidate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetNotUsedSkillsNamesAsync(UI.CandidatesServiceReference.Candidate candidate) {
            return base.Channel.GetNotUsedSkillsNamesAsync(candidate);
        }
        
        public System.Collections.Generic.List<string> GetNotUsedSoftSkillsNames(UI.CandidatesServiceReference.Candidate candidate) {
            return base.Channel.GetNotUsedSoftSkillsNames(candidate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetNotUsedSoftSkillsNamesAsync(UI.CandidatesServiceReference.Candidate candidate) {
            return base.Channel.GetNotUsedSoftSkillsNamesAsync(candidate);
        }
        
        public void SaveSkill(UI.CandidatesServiceReference.SkillsEvaluation skillEvaluation) {
            base.Channel.SaveSkill(skillEvaluation);
        }
        
        public System.Threading.Tasks.Task SaveSkillAsync(UI.CandidatesServiceReference.SkillsEvaluation skillEvaluation) {
            return base.Channel.SaveSkillAsync(skillEvaluation);
        }
        
        public long AddSkill(UI.CandidatesServiceReference.Candidate candidate, UI.CandidatesServiceReference.SkillsEvaluation skillEvaluation, string skillName) {
            return base.Channel.AddSkill(candidate, skillEvaluation, skillName);
        }
        
        public System.Threading.Tasks.Task<long> AddSkillAsync(UI.CandidatesServiceReference.Candidate candidate, UI.CandidatesServiceReference.SkillsEvaluation skillEvaluation, string skillName) {
            return base.Channel.AddSkillAsync(candidate, skillEvaluation, skillName);
        }
        
        public UI.CandidatesServiceReference.Candidate GetCandidateBySkillEvaluationId(long skillEvaluationId) {
            return base.Channel.GetCandidateBySkillEvaluationId(skillEvaluationId);
        }
        
        public System.Threading.Tasks.Task<UI.CandidatesServiceReference.Candidate> GetCandidateBySkillEvaluationIdAsync(long skillEvaluationId) {
            return base.Channel.GetCandidateBySkillEvaluationIdAsync(skillEvaluationId);
        }
        
        public void SaveSoftSkill(UI.CandidatesServiceReference.SoftSkillsEvaluation skillEvaluation) {
            base.Channel.SaveSoftSkill(skillEvaluation);
        }
        
        public System.Threading.Tasks.Task SaveSoftSkillAsync(UI.CandidatesServiceReference.SoftSkillsEvaluation skillEvaluation) {
            return base.Channel.SaveSoftSkillAsync(skillEvaluation);
        }
        
        public long AddSoftSkill(UI.CandidatesServiceReference.Candidate candidate, UI.CandidatesServiceReference.SoftSkillsEvaluation skillEvaluation, string skillName) {
            return base.Channel.AddSoftSkill(candidate, skillEvaluation, skillName);
        }
        
        public System.Threading.Tasks.Task<long> AddSoftSkillAsync(UI.CandidatesServiceReference.Candidate candidate, UI.CandidatesServiceReference.SoftSkillsEvaluation skillEvaluation, string skillName) {
            return base.Channel.AddSoftSkillAsync(candidate, skillEvaluation, skillName);
        }
        
        public UI.CandidatesServiceReference.Candidate GetCandidateBySoftSkillEvaluationId(long softSkillEvaluationId) {
            return base.Channel.GetCandidateBySoftSkillEvaluationId(softSkillEvaluationId);
        }
        
        public System.Threading.Tasks.Task<UI.CandidatesServiceReference.Candidate> GetCandidateBySoftSkillEvaluationIdAsync(long softSkillEvaluationId) {
            return base.Channel.GetCandidateBySoftSkillEvaluationIdAsync(softSkillEvaluationId);
        }
    }
}
